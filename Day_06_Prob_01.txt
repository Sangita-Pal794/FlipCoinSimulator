1>

#!/bin/bash -x
read -p "Enter the range" n
for (( i=1;i<=$n;i++ ))
do
        echo -n $((2**$i))
done
printf "\n"

$ sh 6_01.sh
Enter the range5
2481632

---------------------------------------------------------------------------------------------------------------------------------------------------------------
3>
#!usr/bin/bash
read -p "Enter the number" number
i=2
flag=0
while test $i -le `expr $number / 2`
do
if test `expr $number % $i` -eq 0
then
flag=1
fi
i=`expr $i + 1`
done
if test $flag -eq 1
then
echo "The number is Not Prime"
else
echo "The number is Prime"
fi

$ sh EvenOdd.sh
Enter the number3
The number is Prime

SANGITA@DESKTOP-9PQF3MH MINGW64 ~/TerminalCommands/linux-content (master)
$ sh EvenOdd.sh
Enter the number4
The number is Not Prime
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
4>
#!/bin/bash
# Check if a number is prime

# function to return whether prime or not
check_prime() {
    current_number=$1
    flag=0
    i=2

    while test $i -le `expr $current_number / 2`
    do
        if test `expr $current_number % $i` -eq 0
        then
            flag=1
        fi
        i=`expr $i + 1`
    done

    if test $flag -eq 0
        then echo $current_number
    fi
}

# Assign From and to number
from_number=$1
to_number=$2

for (( number=$from_number; number<=$to_number; number++ ))
do
    check_prime $number
done

SANGITA@DESKTOP-9PQF3MH MINGW64 ~/TerminalCommands/linux-content (master)
$ chmod 777 range_prim.sh

SANGITA@DESKTOP-9PQF3MH MINGW64 ~/TerminalCommands/linux-content (master)
$ ./range_prim.sh
$ ./range_prime.sh 10 30
11
13
17
19
23
29

-----------------------------------------------------------------------------------------------------------------------
5>
#!/bin/bash
echo "Enter a number"
read num

fact=1

while [ $num -gt 1 ]
do
  fact=$((fact * num))  #fact = fact * num
  num=$((num - 1))      #num = num - 1
done

echo $fact
SANGITA@DESKTOP-9PQF3MH MINGW64 ~/TerminalCommands/linux-content (master)
$ ./6_05.sh
Enter a number
6
720
-------------------------------------------------------------------------------------------------------------------------------
2>
#!/bin/bash -x
echo Enter a number
read n
value=0
sum=0
for(( i=1; i<=n; i++ ))
do
        value=`echo "scale=3;1/$i"| bc`
        sum=`echo "scale=3;$sum+$value"| bc`
done
echo $sum

-----------------------------------------------------------------------------------------------------------------------------------
6>
#!/bin/bash -x
echo "enter an integer:"
read input
if [ $input -lt 1 ];then
echo "not allowed!"
exit 1
fi
# find factors and prime

i=2
count=0
flag=0
for ((i;i<$input;));do
    
  if [ `expr $input % $i` -eq 0 ];then
      factor=$i

  for ((j=2;j<=`expr $factor / 2`;));do
      flag=0
      if [ `expr $factor % $j` -eq 0 ];then
      flag=1
      break
      fi
      j=`expr $j + 1`
  done
  if [ $flag -eq 0 ];then
  echo "[ $factor ]"
  count=1
  fi
  fi
  i=`expr $i + 1`
  done
  if [ $count -eq 0 ];then
  echo "no prime factors found except 1 and $input"
  fi

enter an integer:
20
[ 2 ]
[ 5 ]


